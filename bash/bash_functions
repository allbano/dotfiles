#!/usr/bin/env bash
# Albano's .bash_funtions
# Based in Meleu's .bash_funtions

# functions for colorized output
###############################################################################
# ANSI escape color codes
if [[ -z "${ansiRed}" ]]; then
	readonly ansiRed='\e[1;31m'
	readonly ansiGreen='\e[1;32m'
	readonly ansiYellow='\e[1;33m'
	readonly ansiNoColor='\e[0m'
fi

echoRed() {
	echo -e "${ansiRed}$*${ansiNoColor}"
}

echoGreen() {
	echo -e "${ansiGreen}$*${ansiNoColor}"
}

echoYellow() {
	echo -e "${ansiYellow}$*${ansiNoColor}"
}

err() {
	echoRed "$*" >&2
}

warn() {
	echoYellow "$*" >&2
}

updateDotfiles() {
    declare -A MSGS
    MSGS["check"]="Verificando dotfiles..."
    MSGS["update"]="Atualizando repositório de dotfiles..."
    echo "${MSGS["check"]}"
    [[ ! -d "$DOTFILES"  ]] && exit 2
    echo "${MSGS["update"]}"
    cd "$DOTFILES" || return
    git pull origin main
    cd "$HOME" || return
}

updateHistory() {
  LOCALPATH="/home/$USER/github/dotfiles/bash/history"
  UPTODATE="$(date +'%d/%m/%Y às %H:%M:%S')"
  HISTNAME="$(uname --nodename)-history"
  UPNAME="$(uname --nodename)-updates"
  if [ -f "$LOCALPATH/$UPNAME" ]; then
    cp -f "$HOME/.bash_history" "$HOME/github/dotfiles/bash/history/$HISTNAME";
    echo "Seu history foi atualizado em $UPTODATE" >> "$LOCALPATH/$UPNAME";
    else
      touch "$LOCALPATH/$UPNAME";
      cp -f "$HOME/.bash_history" "$HOME/github/dotfiles/bash/history/$HISTNAME";
      echo "Seu history foi atualizado em $UPTODATE" >> "$LOCALPATH/$UPNAME";
  fi 
}

git_current_branch() {\
  if ! git branch --show-current &> /dev/null; then
    echo "Este diretório não é um repositório git!"
    else
      git branch --show-current | xargs -I BRANCH echo -n BRANCH 
  fi
}






