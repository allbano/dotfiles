#!/usr/bin/env bash

# ---------------------------------------------------------------------- #
# Script      : /home/albano/bin/functionsInitBash
# Description : 
# Version     : 0.1
# Author      : Albano Maywitz <allbano@gmail.com> 
# Data        : 19 de janeiro de 2024
# License     : GNU/GPL v3.0 
# ---------------------------------------------------------------------- #
# Use :
# ---------------------------------------------------------------------- #
#set -euo pipefail


# launch(): Open the file/URL with the default application.
launch() {
    
    local args="$@"
		xdg-open "$args" &>/dev/null &

}

# google(): Open google.com in the default browser, arguments are used as search terms.
google() {
	  local terms;
	  terms="$@"
    echo terms
    terms="$(echo -e ${terms// /+})"
	  launch "https://www.google.com/search?q=${terms}" 
}
_exit_status() {
  case $1 in
    0) return ;;
    *) printf '(%d) ' "$1" ;;
  esac
}

ipinf() { 
  if rg -P "(([1-9]\d{0,2})\.){3}(?2)" <<< "$1"; then
	 curl ipinfo.io/"$1"
    else
	  ipawk=$(host "$1" | awk 'NR==1 {print $4}')
	  curl ipinfo.io/${ipawk[1]}
  fi
}

# Git functions
git_current_branch() {\
   [[ $(git branch &>/dev/null;echo $?) -eq 0  ]] && \
    git branch | head -n1 | colrm 1 2  | xargs -I BRANCH echo -n BRANCH  || \
    echo "Este diretório não é um repositório git!"
}

pullDotfiles() {
    declare -A MSGS
    MSGS["check"]="Verificando dotfiles..."
    MSGS["update"]="Atualizando repositório de dotfiles..."
    LOCALPATH="$(pwd)"
    echo "${MSGS["check"]}"
    [[ ! -d "$DOTFILES"  ]] && exit 2
    echo "${MSGS["update"]}"
    cd "$DOTFILES" || return
    git pull -v --all
    cd "$LOCALPATH" || return
}

pushHis() {
    local LOCALPATH
    LOCALPATH="$(pwd)"
    local UPTODATE
    UPTODATE="$(date +%s)"
    local HPATH="/home/${USER}/github/dotfiles/bash/history"
    local HISTNAMEBASE="${HOSTNAME}-history" 
    local HISTNAME="${HISTNAMEBASE}-${UPTODATE}"

    cd "$HPATH" || exit 1
    HIST="$(echo "${HISTNAMEBASE}"*)"
    ALLDEB=$(realpath "${HIST}")
    [[ -f "${ALLDEB}" ]] && rm "${ALLDEB}"
    cp -p "${HOME}/.bash_history" "${HPATH}/${HISTNAME}"
    git add "${HPATH}"
    git commit -m "Your bash_history on PC \"${HOSTNAME}\" was updated on $(date -d @"${UPTODATE}")"
    git push origin "$(git_current_branch)"
    cd "${LOCALPATH}" || exit 2
}











